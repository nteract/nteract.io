///////////-------------------------------------------------------------------------------------------------------------
///---
/// Mixins
/// mixins.scss
///---
///////////-------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------
// Gradients
//----------------------------------------------------------------------------------------------------------------------

@function is-direction($value) {
  $is-keyword: index(
    (
      to top,
      to top right,
      to right top,
      to right,
      to bottom right,
      to right bottom,
      to bottom,
      to bottom left,
      to left bottom,
      to left,
      to left top,
      to top left
    ),
    $value
  );
  $is-angle: type-of($value) == "number" and
    index("deg" "grad" "turn" "rad", unit($value));
  @return $is-keyword or $is-angle;
}

@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }
  $conversion-map: (
    to top : bottom,
    to top right : bottom left,
    to right top : left bottom,
    to right : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom : top,
    to bottom left : top right,
    to left bottom : right top,
    to left : right,
    to left top : right bottom,
    to top left : bottom right
  );
  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }
  @return 90deg - $value;
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(
    legacy-direction($direction),
    $color-stops
  );
  background: linear-gradient($direction, $color-stops);
}

//----------------------------------------------------------------------------------------------------------------------
// Backgrounds
//----------------------------------------------------------------------------------------------------------------------

@mixin backgroundWithDots {
  position: relative;
  &::before {
    @include linear-gradient(135deg, #1d8ee8 0%, #1e427d 100%);
    content: "";
    height: 100%;
    top: 0;
    left: 0;
    width: 100%;
    z-index: -2;
    position: absolute;
  }
  &::after {
    content: "";
    position: absolute;
    height: 100%;
    width: 100%;
    z-index: -1;
    top: 0;
    left: 0;
    background: url(https://images-hoshi.nationalmachine.co/ineffable/uploads/8e24bc29d4dcbda1aa6f2a1dcdd4c0e6/background-dots.png)
      repeat center center;
    background-size: 14.5px;
  }
}

@mixin colorBar($height, $color, $distance) {
  &::before {
    content: "";
    height: $height;
    transform: translateY(-$distance);
    background: $color;
    width: 100%;
    position: absolute;
    top: 0;
  }
}

//----------------------------------------------------------------------------------------------------------------------
// Mobile
//----------------------------------------------------------------------------------------------------------------------

$tablet: 768px;
$desktop: 1024px;
$mid-sized: 1200px;

@mixin handheld {
  @media (max-width: #{$tablet - 1px}) {
    @content;
  }
}

@mixin handheld-up {
  @media (min-width: #{$tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$desktop - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: #{$desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop}) {
    @content;
  }
}

@mixin large-display {
  @media (min-width: #{$GlobalWidth}) {
    @content;
  }
}

@mixin mid-down {
  @media (max-width: 1240px) {
    @content;
  }
}

@mixin below-large-display {
  @media (max-width: calc(#{$GlobalWidth} + 20%)) {
    @content;
  }
}

.mobile-only {
  @include desktop {
    display: none !important;
  }
}

@mixin center-content {
  margin-right: auto;
  margin-left: auto;
}

@mixin global-wrapper {
  @include center-content;
  padding-left: $gutter*2;
  padding-right: $gutter*2;
  max-width: $global-width;

  //@include tablet{
  //  padding-left:$gutter*2;
  //  padding-right:$gutter*2;
  //}
}

@mixin bar-highlight {
  position: relative;
  &:hover {
    cursor: pointer;
    &::after {
      transform: none;
    }
  }

  &.active {
    &::after {
      transform: none;
    }
  }
  &::after {
    content: "";
    position: absolute;
    bottom: 0;
    height: 3px;
    background: $color-dodger;
    width: 100%;
    left: 0;
    transition: $transition;
    transform: scale(0);
    transform-origin: center;
  }
}

@mixin active-state-transform {
  transform: translateY(2px);
}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeout {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-and-slide-in-from-bottom {
  from {
    opacity: 0;
    transform: translate3d(0, $gutter*4, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

@keyframes fade-and-slide-in-from-bottom-sm {
  from {
    opacity: 0;
    transform: translate3d(0, $unit, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

@keyframes fade-and-slide-in-from-top {
  from {
    opacity: 0;
    transform: translate3d(0, -$gutter*4, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

@keyframes fade-and-slide-in-from-top-sm {
  from {
    opacity: 0;
    transform: translate3d(0, -$unit, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

$timing-animation: $timing*2.5;

.animation {
  &-fadein {
    opacity: 0;
    animation: fadein $timing-animation forwards $global-easing;
  }
  &-fadeout {
    opacity: 1;
    animation: fadeout $timing-animation forwards $global-easing;
  }
  &-fade-and-slide-in-from-bottom {
    opacity: 0;
    animation: fade-and-slide-in-from-bottom $timing-animation forwards
      $global-easing;
  }
  &-fade-and-slide-in-from-bottom-sm {
    opacity: 0;
    animation: fade-and-slide-in-from-bottom-sm $timing-animation forwards
      $global-easing;
  }
  &-fade-and-slide-in-from-bottom-sm-fast {
    opacity: 0;
    animation: fade-and-slide-in-from-bottom-sm $timing-animation/2 forwards
      $global-easing;
  }
  &-fade-and-slide-in-from-top {
    opacity: 0;
    animation: fade-and-slide-in-from-top $timing-animation forwards
      $global-easing;
  }
  &-fade-and-slide-in-from-top-sm {
    opacity: 0;
    animation: fade-and-slide-in-from-top-sm $timing-animation forwards
      $global-easing;
  }
  &-delay {
    &-xl {
      animation-delay: 2s;
    }
    &-l {
      animation-delay: 1s;
    }
    &-med {
      animation-delay: 0.5s;
    }
    &-sm {
      animation-delay: 0.25s;
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
// Fadein
//----------------------------------------------------------------------------------------------------------------------

@mixin animationFadein-xl {
  @extend .animation-fadein;
  @extend .animation-delay-xl;
}

@mixin animationFadein-l {
  @extend .animation-fadein;
  @extend .animation-delay-l;
}

@mixin animationFadein-med {
  @extend .animation-fadein;
  @extend .animation-delay-med;
}

@mixin animationFadein-sm {
  @extend .animation-fadein;
  @extend .animation-delay-sm;
}

@mixin animationFadein {
  @extend .animation-fadein;
}

//----------------------------------------------------------------------------------------------------------------------
// Fade and slide in from bottom
//----------------------------------------------------------------------------------------------------------------------

@mixin animationFadeAndSlideInFromBottom {
  @extend .animation-fade-and-slide-in-from-bottom;
}

@mixin animationFadeAndSlideInFromBottom-sm {
  @extend .animation-fade-and-slide-in-from-bottom-sm;
}
@mixin animationFadeAndSlideInFromBottom-sm-fast {
  @extend .animation-fade-and-slide-in-from-bottom-sm-fast;
}

@mixin animationFadeAndSlideInFromTop {
  @extend .animation-fade-and-slide-in-from-top;
}

@mixin animationFadeAndSlideInFromTop-sm {
  @extend .animation-fade-and-slide-in-from-top-sm;
}

@mixin fullSizePosAbsolute {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin typography-title-xl {
  font-size: 58px;
  line-height: 60px;
  @include handheld {
    font-size: 50px;
    line-height: 58px;
  }
}

@mixin typography-title-l {
  font-size: 38px;
  line-height: 46px;
}

@mixin typography-title-med {
  font-size: 34px;
  line-height: 44px;
  font-weight: 500;
}

@mixin typography-title-sm {
  font-size: 28px;
  line-height: 34px;
}

@mixin align-content-center {
  margin-right: auto;
  margin-left: auto;
}

@mixin fullPseudoElement {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

// ----
// This accounts for when someone loads the page that has the light theme, rather than making the html background
// transparent by !important, we are adding a pseudo element to overlay it.
// The main reason we do this is because the app is animated in, and sometimes the whole app will be at ~0.97%
// opacity, and you could see the background behind the app.
// ----
@mixin addPseudoToHTML {
  position: relative;
  &::before {
    @include fullPseudoElement;
    background: white;
    @include animationFadein;
  }
}
